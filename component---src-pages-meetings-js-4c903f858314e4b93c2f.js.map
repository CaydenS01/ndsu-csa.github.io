{"version":3,"sources":["webpack:///./src/pages/meetings.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/navbar/navItem.js","webpack:///./src/components/navbar/navLogo.js","webpack:///./src/components/navbar/navHead.js","webpack:///./src/components/navbar/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/layout/layout.js"],"names":["MeetingPage","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","data","_components_layout_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","style","overflowX","href","site","siteMetadata","school","_public_static_d_1989525548_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","NavItem","link","body","react_default","class","margin","gatsby_browser_entry","to","color","textDecoration","NavLogo","NavHead","_this","_React$Component","call","this","console","log","Component","Nav","state","value","_this2","navHead","navLogo","siteTitle","verticalAlign","onClick","setState","height","width","gatsby_image_default","fluid","hamburger","childImageSharp","className","_2035399617","Header","nav","navItem","Layout","components_header","titleShort","Date","getFullYear","_2559663860","node"],"mappings":"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","file":"component---src-pages-meetings-js-4c903f858314e4b93c2f.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout/layout'\nimport SEO from '../components/seo'\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction MeetingPage() {\n    return (\n        <StaticQuery\n            query={graphql`\n                query MeetingQuery {\n                    site {\n                        ...SchoolName\n                    }\n                }\n            `}\n            render={ (data) => (\n                <Layout>\n                    <SEO title=\"Meetings\" />\n                    <h1>Meetings</h1>\n                    <p>Our current meeting schedule is as follows:</p>\n                    <div style={{\n                        overflowX: `scroll`\n                    }}>\n                        <table>\n                            <tr>\n                                <th>Monday</th>\n                                <th>Tuesday</th>\n                                <th>Wednesday</th>\n                                <th>Thursday</th>\n                                <th>Friday</th>\n                                <th>Saturday</th>\n                                <th>Sunday</th>\n                            </tr>\n                            <tr>\n                                <td>No Meeting</td>\n                                <td>No Meeting</td>\n                                <td>\n                                    6PM<br/>\n                                    QBB Room 424\n                                </td>\n                                <td>No Meeting</td>\n                                <td>No Meeting</td>\n                                <td>No Meeting</td>\n                                <td>No Meeting</td>\n                            </tr>\n                        </table>\n                    </div>\n                    <p>\n                        While this is our set schedule, often times there are meetings hosted by members that may not fall on the one day a week we officially meet.\n                        Reminders to meetings are sent out by email, if you would like to be added to our email list, join our club at \n                        our <a href=\"https://myndsu.ndsu.edu/organization/csa\">My {data.site.siteMetadata.school} Page.</a>\n                    </p>\n                </Layout>\n            )}\n        />\n    )\n};\n    \nexport default MeetingPage","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\n/**\n * SEO\n * \n * provides the site with meta tags of the given information\n * \n * @param description\n * @param lang\n * @param meta\n * @param keywords\n * @param title\n * @returns meta elements\n */\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\n\n/**\n * NavItem\n * \n * Used for nav elements in header\n * \n * @param link where to link to\n * @param body text of item\n * @returns formatted nav item element\n */\nconst NavItem = ( { link, body } ) => (\n    <div class=\"nav-item\">\n        <h4 style={{ margin: 0 }}>\n            <Link to={link} style={{\n                color: `white`,\n                textDecoration: `none`,\n            }}>\n            { body }\n            </Link>\n        </h4>\n    </div>\n);\n\nNavItem.propTypes = {\n    link: PropTypes.string,\n    body: PropTypes.string\n}\n\nNavItem.defaultProps = {\n    link: ``,\n    body: ``\n}\n\nexport default NavItem","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\n\n/**\n * \n * NavLogo\n * \n * Takes given information and turns into the head of the navbar\n * \n * @param link link to\n * @param body label text\n * @returns a nav head element \n */\nconst NavLogo = ( { link, body } ) => (\n    <div class=\"nav-logo\">\n        <h3 style={{ margin: 0 }}>\n            <Link to={link} style={{\n                color: `white`,\n                textDecoration: `none`,\n            }}>\n            {body}\n            </Link>\n        </h3>\n    </div>\n);\n\nNavLogo.propTypes = {\n    link: PropTypes.string,\n    body: PropTypes.string\n}\n\nNavLogo.defaultProps = {\n    link: ``,\n    body: ``\n}\n\nexport default NavLogo","import React from 'react'\n\nclass NavHead extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n    }\n\n    render() {\n        return(\n            <div class=\"nav-head\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default NavHead","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport NavLogo from './navLogo'\nimport NavHead from './navHead'\n\nconst hamburgerQuery = graphql`\n    query {\n        hamburger: file(relativePath: { eq: \"hamburger.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 128, maxHeight: 128) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n    }`;\n\nclass Nav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value : \"up\"\n        }\n    }\n\n    render() {\n        return(\n            <StaticQuery\n                query={hamburgerQuery}\n                render={(data) => (\n                    <div class=\"nav\">\n                        <NavHead>\n                            <NavLogo link='/' body={this.props.siteTitle} />\n                            <div \n                                class=\"nav-hamburger\" \n                                style={{\n                                    verticalAlign: \"center\"\n                                }} \n                                onClick={\n                                    () => {\n                                        (this.state.value === \"up\") ? \n                                            this.setState({value: \"down\"}) : \n                                            this.setState({value: \"up\"});\n                                    }\n                                }\n                            >\n                                <div style={{\n                                    height: \"32px\",\n                                    width: \"32px\"\n                                }}>\n                                    <Img fluid={data.hamburger.childImageSharp.fluid} />\n                                </div>\n                            </div>\n                        </NavHead>\n                        <div className={`nav-body slide-${this.state.value}`}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                )}\n            />\n        )\n    }\n}\n\nexport default Nav","import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport NavItem from '../components/navbar/navItem'\nimport Nav from '../components/navbar/nav'\n\nimport '../css/header.css'\n\n/**\n * Header\n * \n * Creates the site banner\n * \n * @param siteTitle title for site, placed in large letters in banner\n */\nconst Header = ({ siteTitle }) => (\n    <Nav siteTitle={siteTitle}>\n        <NavItem link='/about' body='ABOUT' />\n        <NavItem link='/meetings' body='MEETINGS' />\n        <NavItem link='/contact' body='CONTACT' />\n    </Nav>\n);\n\n// declare property types\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n};\n\n// default values if value not given\nHeader.defaultProps = {\n    siteTitle: ``,\n};\n\nexport default Header;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from '../header'\nimport '../../css/layout.css'\nimport '../../css/custom.css'\n\n/**\n * Layout\n * \n * Provides a layout for the site, puts a header and footer around content given\n * \n * @param children inner content for site\n */\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query LayoutQuery {\n                site {\n                    siteMetadata {\n                        title,\n                        titleShort,\n                        author\n                    }\n                }\n            }\n        `}\n        render={(data) => (\n            <div class=\"site\">\n                <Header siteTitle={data.site.siteMetadata.titleShort} />\n                <div class=\"site-content\"> \n                    {children}\n                </div>\n                <footer>\n                    <div class=\"footer-content\">\n                        Copyright {new Date().getFullYear()} {data.site.siteMetadata.author}\n                    </div>\n                </footer>\n            </div>\n        )}\n    />\n);\n\n// declare property types\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}