{"version":3,"sources":["webpack:///./src/components/card/contactCard.js","webpack:///./src/pages/contact.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/navbar/navItem.js","webpack:///./src/components/navbar/navLogo.js","webpack:///./src/components/navbar/navHead.js","webpack:///./src/components/navbar/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/layout/layout.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["ContactCard","_ref","title","name","subTitle","email","phoneNumber","react_default","a","createElement","style","lineHeight","padding","href","propTypes","PropTypes","string","Contact","gatsby_browser_entry","query","render","data","layout","seo","site","siteMetadata","schoolFull","school","contactCard","contactInfo","president","facultyAdvisor","_2999100668","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","NavItem","link","body","class","margin","to","color","textDecoration","NavLogo","NavHead","_this","_React$Component","call","this","console","log","Component","Nav","state","value","_this2","navHead","navLogo","siteTitle","verticalAlign","onClick","setState","height","width","gatsby_image_default","fluid","hamburger","childImageSharp","className","_2035399617","Header","nav","navItem","Layout","components_header","titleShort","Date","getFullYear","_2559663860","node","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-pages-contact-js-630cab5ea75271121db0.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * \n * Contact Card\n * \n * Creates a formatted contact card with given information, used specifically on\n * /contact\n * \n * @param title \n * @param name \n * @param subTitle e.g. assistant professor\n * @param email \n * @param phoneNumber\n * @returns formatted contact card\n */\nfunction ContactCard( { title, name, subTitle, email, phoneNumber } ) {\n    return (\n        <div style={{\n            lineHeight: \"0.5em\"\n        }}>\n            <div style={{\n                padding: \"20px 20px 0px 50px\"\n            }}>\n                <p><b>{title}:</b></p>\n                <p>{name}</p>\n                <p>{subTitle}</p>\n                <p><a href={`mailto:${email}`}>{email}</a></p>\n                <p>{phoneNumber}</p>\n            </div>\n        </div>\n    );\n}\n\nContactCard.propTypes = {\n    title: PropTypes.string,\n    name: PropTypes.string,\n    subTitle: PropTypes.string,\n    email: PropTypes.string,\n    phoneNumber: PropTypes.string\n}\n\nexport default ContactCard;","import React from 'react'\n\nimport Layout from '../components/layout/layout'\nimport SEO from '../components/seo'\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport ContactCard from '../components/card/contactCard'\n\nconst Contact = () => (\n    <StaticQuery\n        query={\n            graphql`\n                query ContactQuery {\n                    site {\n                        ...SchoolName\n                        ...ContactInfo\n                    }\n                }\n            `\n        }\n        render={(data) => (\n            <Layout>\n                <SEO title=\"Contact\" />\n                <h1>Contact</h1>\n                <p>\n                    If you are a student at {data.site.siteMetadata.schoolFull}, then the best way to contact us is through \n                    our <a href=\"https://myndsu.ndsu.edu/organization/csa\">My {data.site.siteMetadata.school} Page.</a>\n                </p>\n                <p>\n                    If you are not a student at {data.site.siteMetadata.schoolFull}, then the best way to contact us is through \n                    one of our club representatives:\n                </p>\n                <ContactCard \n                    title={data.site.siteMetadata.contactInfo.president.title} \n                    name={data.site.siteMetadata.contactInfo.president.name} \n                    subTitle={data.site.siteMetadata.contactInfo.president.subTitle} \n                    email={data.site.siteMetadata.contactInfo.president.email} \n                    phoneNumber={data.site.siteMetadata.contactInfo.president.phoneNumber}\n                />\n                <br />\n                <ContactCard \n                    title={data.site.siteMetadata.contactInfo.facultyAdvisor.title} \n                    name={data.site.siteMetadata.contactInfo.facultyAdvisor.name} \n                    subTitle={data.site.siteMetadata.contactInfo.facultyAdvisor.subTitle} \n                    email={data.site.siteMetadata.contactInfo.facultyAdvisor.email} \n                    phoneNumber={data.site.siteMetadata.contactInfo.facultyAdvisor.phoneNumber}\n                />\n            </Layout>\n        )}\n    />\n);\n\nexport default Contact;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\n/**\n * SEO\n * \n * provides the site with meta tags of the given information\n * \n * @param description\n * @param lang\n * @param meta\n * @param keywords\n * @param title\n * @returns meta elements\n */\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\n\n/**\n * NavItem\n * \n * Used for nav elements in header\n * \n * @param link where to link to\n * @param body text of item\n * @returns formatted nav item element\n */\nconst NavItem = ( { link, body } ) => (\n    <div class=\"nav-item\">\n        <h4 style={{ margin: 0 }}>\n            <Link to={link} style={{\n                color: `white`,\n                textDecoration: `none`,\n            }}>\n            { body }\n            </Link>\n        </h4>\n    </div>\n);\n\nNavItem.propTypes = {\n    link: PropTypes.string,\n    body: PropTypes.string\n}\n\nNavItem.defaultProps = {\n    link: ``,\n    body: ``\n}\n\nexport default NavItem","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\n\n/**\n * \n * NavLogo\n * \n * Takes given information and turns into the head of the navbar\n * \n * @param link link to\n * @param body label text\n * @returns a nav head element \n */\nconst NavLogo = ( { link, body } ) => (\n    <div class=\"nav-logo\">\n        <h3 style={{ margin: 0 }}>\n            <Link to={link} style={{\n                color: `white`,\n                textDecoration: `none`,\n            }}>\n            {body}\n            </Link>\n        </h3>\n    </div>\n);\n\nNavLogo.propTypes = {\n    link: PropTypes.string,\n    body: PropTypes.string\n}\n\nNavLogo.defaultProps = {\n    link: ``,\n    body: ``\n}\n\nexport default NavLogo","import React from 'react'\n\nclass NavHead extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n    }\n\n    render() {\n        return(\n            <div class=\"nav-head\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default NavHead","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport NavLogo from './navLogo'\nimport NavHead from './navHead'\n\nconst hamburgerQuery = graphql`\n    query {\n        hamburger: file(relativePath: { eq: \"hamburger.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 128, maxHeight: 128) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n    }`;\n\nclass Nav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value : \"up\"\n        }\n    }\n\n    render() {\n        return(\n            <StaticQuery\n                query={hamburgerQuery}\n                render={(data) => (\n                    <div class=\"nav\">\n                        <NavHead>\n                            <NavLogo link='/' body={this.props.siteTitle} />\n                            <div \n                                class=\"nav-hamburger\" \n                                style={{\n                                    verticalAlign: \"center\"\n                                }} \n                                onClick={\n                                    () => {\n                                        (this.state.value === \"up\") ? \n                                            this.setState({value: \"down\"}) : \n                                            this.setState({value: \"up\"});\n                                    }\n                                }\n                            >\n                                <div style={{\n                                    height: \"32px\",\n                                    width: \"32px\"\n                                }}>\n                                    <Img fluid={data.hamburger.childImageSharp.fluid} />\n                                </div>\n                            </div>\n                        </NavHead>\n                        <div className={`nav-body slide-${this.state.value}`}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                )}\n            />\n        )\n    }\n}\n\nexport default Nav","import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport NavItem from '../components/navbar/navItem'\nimport Nav from '../components/navbar/nav'\n\nimport '../css/header.css'\n\n/**\n * Header\n * \n * Creates the site banner\n * \n * @param siteTitle title for site, placed in large letters in banner\n */\nconst Header = ({ siteTitle }) => (\n    <Nav siteTitle={siteTitle}>\n        <NavItem link='/about' body='ABOUT' />\n        <NavItem link='/meetings' body='MEETINGS' />\n        <NavItem link='/contact' body='CONTACT' />\n    </Nav>\n);\n\n// declare property types\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n};\n\n// default values if value not given\nHeader.defaultProps = {\n    siteTitle: ``,\n};\n\nexport default Header;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from '../header'\nimport '../../css/layout.css'\nimport '../../css/custom.css'\n\n/**\n * Layout\n * \n * Provides a layout for the site, puts a header and footer around content given\n * \n * @param children inner content for site\n */\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query LayoutQuery {\n                site {\n                    siteMetadata {\n                        title,\n                        titleShort,\n                        author\n                    }\n                }\n            }\n        `}\n        render={(data) => (\n            <div class=\"site\">\n                <Header siteTitle={data.site.siteMetadata.titleShort} />\n                <div class=\"site-content\"> \n                    {children}\n                </div>\n                <footer>\n                    <div class=\"footer-content\">\n                        Copyright {new Date().getFullYear()} {data.site.siteMetadata.author}\n                    </div>\n                </footer>\n            </div>\n        )}\n    />\n);\n\n// declare property types\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}