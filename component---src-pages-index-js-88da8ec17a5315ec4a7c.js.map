{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/navbar/navItem.js","webpack:///./src/components/navbar/navLogo.js","webpack:///./src/components/navbar/navHead.js","webpack:///./src/components/navbar/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/layout/layout.js"],"names":["Image","location","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","imgSkimask","childImageSharp","_2917534692","IndexPage","layout","seo","title","style","maxWidth","marginBottom","margin","components_image","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","NavItem","link","body","class","to","color","textDecoration","NavLogo","NavHead","_this","_React$Component","call","this","console","log","Component","Nav","state","value","_this2","navHead","navLogo","siteTitle","verticalAlign","onClick","setState","height","width","hamburger","className","_2035399617","Header","nav","navItem","Layout","components_header","titleShort","Date","getFullYear","_2559663860","node"],"mappings":"kKAiCeA,EAlBD,SAACC,GAAD,OACZC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAWLC,OACE,SAACC,GAAD,OAAUN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAKO,MAAOF,EAAKG,WAAWC,gBAAgBF,SAb1DF,KAAAK,cCCaC,UAXG,kBACdZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAKC,MAAM,SACXf,EAAAC,EAAAC,cAAA,6DACAF,EAAAC,EAAAC,cAAA,gHACAF,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAAEC,SAAQ,QAAWC,aAAY,UAAaC,OAAM,WAC5DnB,EAAAC,EAAAC,cAACkB,EAAD,2CCZZC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAAjC,IAAAoB,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAAnC,IAAA,IAAAoC,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAAa,GAAK,OACvBX,EAAA5B,EAAAC,cAACwB,EAAmBe,SAApB,KACG,SAAAC,GACC,OACEF,EAAMlC,MACLoC,EAAgBF,EAAMpC,QAAUsC,EAAgBF,EAAMpC,OAAOE,MAEtDkC,EAAMnC,QAAUmC,EAAMG,UAC5BH,EAAMlC,KAAOkC,EAAMlC,KAAKA,KAAOoC,EAAgBF,EAAMpC,OAAOE,MAGvDuB,EAAA5B,EAAAC,cAAA,uCAaf,SAASuB,IACP,MAAM,IAAImB,MACR,gVATJjB,EAAYkB,UAAY,CACtBvC,KAAMwC,IAAUC,OAChB3C,MAAO0C,IAAUE,OAAOC,WACxB5C,OAAQyC,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,uPCMzCK,EAAmB,SAAAC,GAAkB,IAAf1D,EAAe0D,EAAf1D,SACpB2D,EAAgBC,UAAOC,4BAA4B7D,EAAS8D,UAClE,OAAOvB,IAAMpC,cAAc4D,IAApBC,OAAAC,OAAA,CACLjE,WACA2D,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3B9C,SAAU+C,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,whCCJf,SAASW,EAATV,GAA2D,IAA5CW,EAA4CX,EAA5CW,YAAaC,EAA+BZ,EAA/BY,KAAMC,EAAyBb,EAAzBa,KAAMC,EAAmBd,EAAnBc,SAAUxD,EAAS0C,EAAT1C,MAChD,OACEyD,EAAAvE,EAAAC,cAACuE,EAAA,YAAD,CACErE,MAAOsE,EACPrE,OAAQ,SAAAC,GACN,IAAMqE,EACJP,GAAe9D,EAAKsE,KAAKC,aAAaT,YACxC,OACEI,EAAAvE,EAAAC,cAAC4E,EAAA7E,EAAD,CACE8E,eAAgB,CACdV,QAEFtD,MAAOA,EACPiE,cAAa,QAAU1E,EAAKsE,KAAKC,aAAa9D,MAC9CuD,KAAM,CACJ,CACEW,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASnE,GAEX,CACEoE,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS5E,EAAKsE,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASnE,GAEX,CACEkE,KAAI,sBACJC,QAASP,IAGVU,OACCd,EAASe,OAAS,EACd,CACEL,KAAI,WACJC,QAASX,EAASgB,KAAT,OAEX,IAELF,OAAOf,MAtDlBhE,KAAAkF,IA8DJrB,EAAIsB,aAAe,CACjBpB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAItB,UAAY,CACduB,YAAatB,IAAUE,OACvBqB,KAAMvB,IAAUE,OAChBsB,KAAMxB,IAAU4C,MAChBnB,SAAUzB,IAAU6C,QAAQ7C,IAAUE,QACtCjC,MAAO+B,IAAUE,OAAOC,YAGXkB,MAEf,IAAMO,EAAY,+VCnFZkB,UAAU,SAAAnC,GAAA,IAAIoC,EAAJpC,EAAIoC,KAAMC,EAAVrC,EAAUqC,KAAV,OACZ9F,EAAAC,EAAAC,cAAA,OAAK6F,MAAM,YACP/F,EAAAC,EAAAC,cAAA,MAAIc,MAAO,CAAEG,OAAQ,IACjBnB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAM6F,GAAIH,EAAM7E,MAAO,CACnBiF,MAAK,QACLC,eAAc,SAEhBJ,OAMdF,EAAQ/C,UAAY,CAChBgD,KAAM/C,IAAUE,OAChB8C,KAAMhD,IAAUE,QAGpB4C,EAAQH,aAAe,CACnBI,KAAI,GACJC,KAAI,IAGOF,mDCtBTO,EAAU,SAAA1C,GAAA,IAAIoC,EAAJpC,EAAIoC,KAAMC,EAAVrC,EAAUqC,KAAV,OACZ9F,EAAAC,EAAAC,cAAA,OAAK6F,MAAM,YACP/F,EAAAC,EAAAC,cAAA,MAAIc,MAAO,CAAEG,OAAQ,IACjBnB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAM6F,GAAIH,EAAM7E,MAAO,CACnBiF,MAAK,QACLC,eAAc,SAEjBJ,MAMbK,EAAQtD,UAAY,CAChBgD,KAAM/C,IAAUE,OAChB8C,KAAMhD,IAAUE,QAGpBmD,EAAQV,aAAe,CACnBI,KAAI,GACJC,KAAI,IAGOK,QCrBAC,cAdX,SAAAA,EAAY5D,GAAO,IAAA6D,EAAA,OACfA,EAAAC,EAAAC,KAAAC,KAAMhE,IAANgE,KACAC,QAAQC,IAAIlE,GAFG6D,8BAKnBhG,OAAA,WACI,OACIL,EAAAC,EAAAC,cAAA,OAAK6F,MAAM,YACNS,KAAKhE,MAAMG,cATNL,IAAMqE,WCgEbC,cA/CX,SAAAA,EAAYpE,GAAO,IAAA6D,EAAA,OACfA,EAAAC,EAAAC,KAAAC,KAAMhE,IAANgE,MAEKK,MAAQ,CACTC,MAAQ,MAJGT,8BAQnBhG,OAAA,WAAS,IAAA0G,EAAAP,KACL,OACIxG,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACIC,MAvBI,aAwBJC,OAAQ,SAACC,GAAD,OACJN,EAAAC,EAAAC,cAAA,OAAK6F,MAAM,OACP/F,EAAAC,EAAAC,cAAC8G,EAAD,KACIhH,EAAAC,EAAAC,cAAC+G,EAAD,CAASpB,KAAK,IAAIC,KAAMiB,EAAKvE,MAAM0E,YACnClH,EAAAC,EAAAC,cAAA,OACI6F,MAAM,gBACN/E,MAAO,CACHmG,cAAe,UAEnBC,QACI,WAC0B,OAArBL,EAAKF,MAAMC,MACRC,EAAKM,SAAS,CAACP,MAAO,SACtBC,EAAKM,SAAS,CAACP,MAAO,SAIlC9G,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CACRsG,OAAQ,OACRC,MAAO,SAEPvH,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAKO,MAAOF,EAAKkH,UAAU9G,gBAAgBF,WAIvDR,EAAAC,EAAAC,cAAA,OAAKuH,UAAS,kBAAoBV,EAAKF,MAAMC,OACxCC,EAAKvE,MAAMG,YA5B5BrC,KAAAoH,QAXMpF,IAAMqE,WCHlBgB,UAAS,SAAAlE,GAAA,IAAGyD,EAAHzD,EAAGyD,UAAH,OACXlH,EAAAC,EAAAC,cAAC0H,EAAD,CAAKV,UAAWA,GACZlH,EAAAC,EAAAC,cAAC2H,EAAD,CAAShC,KAAK,SAASC,KAAK,UAC5B9F,EAAAC,EAAAC,cAAC2H,EAAD,CAAShC,KAAK,YAAYC,KAAK,aAC/B9F,EAAAC,EAAAC,cAAC2H,EAAD,CAAShC,KAAK,WAAWC,KAAK,eAKtC6B,EAAO9E,UAAY,CACfqE,UAAWpE,IAAUE,QAIzB2E,EAAOlC,aAAe,CAClByB,UAAS,IAGES,QClBTG,iBAAS,SAAArE,GAAA,IAAGd,EAAHc,EAAGd,SAAH,OACX3C,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACIC,MAAK,aAWLC,OAAQ,SAACC,GAAD,OACJN,EAAAC,EAAAC,cAAA,OAAK6F,MAAM,QACP/F,EAAAC,EAAAC,cAAC6H,EAAD,CAAQb,UAAW5G,EAAKsE,KAAKC,aAAamD,aAC1ChI,EAAAC,EAAAC,cAAA,OAAK6F,MAAM,gBACNpD,GAEL3C,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAK6F,MAAM,kBAAX,cACe,IAAIkC,MAAOC,cAD1B,IAC0C5H,EAAKsE,KAAKC,aAAaO,WApBjF9E,KAAA6H,MA6BJL,EAAOjF,UAAY,CACfF,SAAUG,IAAUsF,KAAKnF,YAGd6E","file":"component---src-pages-index-js-88da8ec17a5315ec4a7c.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Image = (location) => (\n  <StaticQuery\n    query = {graphql`\n      query {\n        imgSkimask: file(relativePath: { eq: \"csa-skimask.jpg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render = {\n      (data) => <Img fluid={data.imgSkimask.childImageSharp.fluid} />\n    }\n  />\n)\nexport default Image\n","import React from 'react'\n\nimport Layout from '../components/layout/layout'\nimport Image from '../components/image'\nimport SEO from '../components/seo'\n\nconst IndexPage = () => (\n    <Layout>\n        <SEO title=\"Home\" />\n        <h1>NDSU Cybersecurity Student Association Homepage</h1>\n        <p>We are a group of individuals that share a common interest of creating technology, and breaking it.</p>\n        <div style={{ maxWidth: `300px`, marginBottom: `1.45rem`, margin: `0 auto`}}>\n            <Image />\n        </div>\n    </Layout>\n);\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\n/**\n * SEO\n * \n * provides the site with meta tags of the given information\n * \n * @param description\n * @param lang\n * @param meta\n * @param keywords\n * @param title\n * @returns meta elements\n */\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\n\n/**\n * NavItem\n * \n * Used for nav elements in header\n * \n * @param link where to link to\n * @param body text of item\n * @returns formatted nav item element\n */\nconst NavItem = ( { link, body } ) => (\n    <div class=\"nav-item\">\n        <h4 style={{ margin: 0 }}>\n            <Link to={link} style={{\n                color: `white`,\n                textDecoration: `none`,\n            }}>\n            { body }\n            </Link>\n        </h4>\n    </div>\n);\n\nNavItem.propTypes = {\n    link: PropTypes.string,\n    body: PropTypes.string\n}\n\nNavItem.defaultProps = {\n    link: ``,\n    body: ``\n}\n\nexport default NavItem","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\n\n/**\n * \n * NavLogo\n * \n * Takes given information and turns into the head of the navbar\n * \n * @param link link to\n * @param body label text\n * @returns a nav head element \n */\nconst NavLogo = ( { link, body } ) => (\n    <div class=\"nav-logo\">\n        <h3 style={{ margin: 0 }}>\n            <Link to={link} style={{\n                color: `white`,\n                textDecoration: `none`,\n            }}>\n            {body}\n            </Link>\n        </h3>\n    </div>\n);\n\nNavLogo.propTypes = {\n    link: PropTypes.string,\n    body: PropTypes.string\n}\n\nNavLogo.defaultProps = {\n    link: ``,\n    body: ``\n}\n\nexport default NavLogo","import React from 'react'\n\nclass NavHead extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n    }\n\n    render() {\n        return(\n            <div class=\"nav-head\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default NavHead","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport NavLogo from './navLogo'\nimport NavHead from './navHead'\n\nconst hamburgerQuery = graphql`\n    query {\n        hamburger: file(relativePath: { eq: \"hamburger.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 128, maxHeight: 128) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n    }`;\n\nclass Nav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value : \"up\"\n        }\n    }\n\n    render() {\n        return(\n            <StaticQuery\n                query={hamburgerQuery}\n                render={(data) => (\n                    <div class=\"nav\">\n                        <NavHead>\n                            <NavLogo link='/' body={this.props.siteTitle} />\n                            <div \n                                class=\"nav-hamburger\" \n                                style={{\n                                    verticalAlign: \"center\"\n                                }} \n                                onClick={\n                                    () => {\n                                        (this.state.value === \"up\") ? \n                                            this.setState({value: \"down\"}) : \n                                            this.setState({value: \"up\"});\n                                    }\n                                }\n                            >\n                                <div style={{\n                                    height: \"32px\",\n                                    width: \"32px\"\n                                }}>\n                                    <Img fluid={data.hamburger.childImageSharp.fluid} />\n                                </div>\n                            </div>\n                        </NavHead>\n                        <div className={`nav-body slide-${this.state.value}`}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                )}\n            />\n        )\n    }\n}\n\nexport default Nav","import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport NavItem from '../components/navbar/navItem'\nimport Nav from '../components/navbar/nav'\n\nimport '../css/header.css'\n\n/**\n * Header\n * \n * Creates the site banner\n * \n * @param siteTitle title for site, placed in large letters in banner\n */\nconst Header = ({ siteTitle }) => (\n    <Nav siteTitle={siteTitle}>\n        <NavItem link='/about' body='ABOUT' />\n        <NavItem link='/meetings' body='MEETINGS' />\n        <NavItem link='/contact' body='CONTACT' />\n    </Nav>\n);\n\n// declare property types\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n};\n\n// default values if value not given\nHeader.defaultProps = {\n    siteTitle: ``,\n};\n\nexport default Header;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from '../header'\nimport '../../css/layout.css'\nimport '../../css/custom.css'\n\n/**\n * Layout\n * \n * Provides a layout for the site, puts a header and footer around content given\n * \n * @param children inner content for site\n */\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query LayoutQuery {\n                site {\n                    siteMetadata {\n                        title,\n                        titleShort,\n                        author\n                    }\n                }\n            }\n        `}\n        render={(data) => (\n            <div class=\"site\">\n                <Header siteTitle={data.site.siteMetadata.titleShort} />\n                <div class=\"site-content\"> \n                    {children}\n                </div>\n                <footer>\n                    <div class=\"footer-content\">\n                        Copyright {new Date().getFullYear()} {data.site.siteMetadata.author}\n                    </div>\n                </footer>\n            </div>\n        )}\n    />\n);\n\n// declare property types\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}