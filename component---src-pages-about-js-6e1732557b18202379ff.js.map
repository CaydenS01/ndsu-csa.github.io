{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/navbar/navItem.js","webpack:///./src/components/navbar/navLogo.js","webpack:///./src/components/navbar/navHead.js","webpack:///./src/components/navbar/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/layout/layout.js"],"names":["About","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","data","_components_layout_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","site","siteMetadata","schoolFull","_public_static_d_346732021_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","NavItem","link","body","react_default","class","style","margin","gatsby_browser_entry","to","color","textDecoration","NavLogo","NavHead","_this","_React$Component","call","this","console","log","Component","Nav","state","value","_this2","navHead","navLogo","siteTitle","verticalAlign","onClick","setState","height","width","gatsby_image_default","fluid","hamburger","childImageSharp","className","_2035399617","Header","nav","navItem","Layout","components_header","titleShort","Date","getFullYear","_2559663860","node"],"mappings":"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","file":"component---src-pages-about-js-6e1732557b18202379ff.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Layout from '../components/layout/layout'\nimport SEO from '../components/seo'\n\nconst About = () => (\n    <StaticQuery \n        query={graphql`\n            query AboutQuery {\n                site {\n                    ...SchoolName\n                }\n            }\n        `}\n        render = { (data) => (\n            <Layout>\n                <SEO title=\"About\" />\n                <h1>About Us</h1>\n                <br/>\n                <p>\n                    We are the Cybersecurity Student Association (CSA for short), a student club located at {data.site.siteMetadata.schoolFull}.\n                    We strive to create a learning environment where students can teach each other about various fields of technology, with an \n                    emphasis on cybersecurity. Some club activities include:\n                </p>\n                <ul>\n                    <li>Competition in cyber games</li>\n                    <li>Workshops in computer and network security </li>\n                    <li>Guest speakers from the professional community </li>\n                    <li>A chance to meet with others that share similar interests during our scheduled meetings</li>\n                    <li>Club fundraising and student involvement activities </li>\n                    <li>Opportunities for professional development and career networking </li>\n                </ul>\n                <p>\n                    We not only teach about cybersecurity, but we also teach real world development skills, if one wishes to work with the development \n                    area of the club, they can expect to work with:\n                </p>\n                <ul>\n                    <li>Git and GitHub in a team environment</li>\n                    <li>Software development workflows that are seen in many software development companies</li>\n                    <li>Various development languages, including Python, C, C++, Javascript, and many others</li>\n                    <li>A wide variety of development technologies, such as Gatsby, React, Node.js, and many more</li>\n                </ul>\n                <p>\n                    By touching many areas of cybersecurity, physical security, and development, we hope to give our members real world skills that can \n                    be applied to many jobs in the technical world. By simply discussing cybersecurity, many members of the club find themselves more aware of \n                    how to protect themselves in the online world. \n                </p>\n\n                <h2>Our Mission</h2>\n                <p>\n                    The goal of the cybersecurity student organization is to increase knowledge of current cybersecurity practices among the NDSU Students through \n                    exercises, lectures, and by working with community members in the networking and computing professions. The organization will support teams to \n                    compete in cybersecurity competitions. It will serve as an excellent opportunity to learn and apply knowledge about security, networking, and \n                    administration as well as providing a chance to network with potential employers. \n                </p>\n            </Layout>\n        )}\n    />\n);\n\nexport default About;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\n/**\n * SEO\n * \n * provides the site with meta tags of the given information\n * \n * @param description\n * @param lang\n * @param meta\n * @param keywords\n * @param title\n * @returns meta elements\n */\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\n\n/**\n * NavItem\n * \n * Used for nav elements in header\n * \n * @param link where to link to\n * @param body text of item\n * @returns formatted nav item element\n */\nconst NavItem = ( { link, body } ) => (\n    <div class=\"nav-item\">\n        <h4 style={{ margin: 0 }}>\n            <Link to={link} style={{\n                color: `white`,\n                textDecoration: `none`,\n            }}>\n            { body }\n            </Link>\n        </h4>\n    </div>\n);\n\nNavItem.propTypes = {\n    link: PropTypes.string,\n    body: PropTypes.string\n}\n\nNavItem.defaultProps = {\n    link: ``,\n    body: ``\n}\n\nexport default NavItem","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\n\n/**\n * \n * NavLogo\n * \n * Takes given information and turns into the head of the navbar\n * \n * @param link link to\n * @param body label text\n * @returns a nav head element \n */\nconst NavLogo = ( { link, body } ) => (\n    <div class=\"nav-logo\">\n        <h3 style={{ margin: 0 }}>\n            <Link to={link} style={{\n                color: `white`,\n                textDecoration: `none`,\n            }}>\n            {body}\n            </Link>\n        </h3>\n    </div>\n);\n\nNavLogo.propTypes = {\n    link: PropTypes.string,\n    body: PropTypes.string\n}\n\nNavLogo.defaultProps = {\n    link: ``,\n    body: ``\n}\n\nexport default NavLogo","import React from 'react'\n\nclass NavHead extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n    }\n\n    render() {\n        return(\n            <div class=\"nav-head\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default NavHead","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport NavLogo from './navLogo'\nimport NavHead from './navHead'\n\nconst hamburgerQuery = graphql`\n    query {\n        hamburger: file(relativePath: { eq: \"hamburger.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 128, maxHeight: 128) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n    }`;\n\nclass Nav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value : \"up\"\n        }\n    }\n\n    render() {\n        return(\n            <StaticQuery\n                query={hamburgerQuery}\n                render={(data) => (\n                    <div class=\"nav\">\n                        <NavHead>\n                            <NavLogo link='/' body={this.props.siteTitle} />\n                            <div \n                                class=\"nav-hamburger\" \n                                style={{\n                                    verticalAlign: \"center\"\n                                }} \n                                onClick={\n                                    () => {\n                                        (this.state.value === \"up\") ? \n                                            this.setState({value: \"down\"}) : \n                                            this.setState({value: \"up\"});\n                                    }\n                                }\n                            >\n                                <div style={{\n                                    height: \"32px\",\n                                    width: \"32px\"\n                                }}>\n                                    <Img fluid={data.hamburger.childImageSharp.fluid} />\n                                </div>\n                            </div>\n                        </NavHead>\n                        <div className={`nav-body slide-${this.state.value}`}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                )}\n            />\n        )\n    }\n}\n\nexport default Nav","import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport NavItem from '../components/navbar/navItem'\nimport Nav from '../components/navbar/nav'\n\nimport '../css/header.css'\n\n/**\n * Header\n * \n * Creates the site banner\n * \n * @param siteTitle title for site, placed in large letters in banner\n */\nconst Header = ({ siteTitle }) => (\n    <Nav siteTitle={siteTitle}>\n        <NavItem link='/about' body='ABOUT' />\n        <NavItem link='/meetings' body='MEETINGS' />\n        <NavItem link='/contact' body='CONTACT' />\n    </Nav>\n);\n\n// declare property types\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n};\n\n// default values if value not given\nHeader.defaultProps = {\n    siteTitle: ``,\n};\n\nexport default Header;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from '../header'\nimport '../../css/layout.css'\nimport '../../css/custom.css'\n\n/**\n * Layout\n * \n * Provides a layout for the site, puts a header and footer around content given\n * \n * @param children inner content for site\n */\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query LayoutQuery {\n                site {\n                    siteMetadata {\n                        title,\n                        titleShort,\n                        author\n                    }\n                }\n            }\n        `}\n        render={(data) => (\n            <div class=\"site\">\n                <Header siteTitle={data.site.siteMetadata.titleShort} />\n                <div class=\"site-content\"> \n                    {children}\n                </div>\n                <footer>\n                    <div class=\"footer-content\">\n                        Copyright {new Date().getFullYear()} {data.site.siteMetadata.author}\n                    </div>\n                </footer>\n            </div>\n        )}\n    />\n);\n\n// declare property types\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}