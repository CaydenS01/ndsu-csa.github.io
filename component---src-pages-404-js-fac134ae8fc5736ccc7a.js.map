{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/navbar/navItem.js","webpack:///./src/components/navbar/navLogo.js","webpack:///./src/components/navbar/navHead.js","webpack:///./src/components/navbar/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/layout/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_layout_js__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","NavItem","link","body","react_default","class","style","margin","gatsby_browser_entry","to","color","textDecoration","NavLogo","NavHead","_this","_React$Component","call","this","console","log","Component","Nav","state","value","_this2","navHead","navLogo","siteTitle","verticalAlign","onClick","setState","height","width","gatsby_image_default","fluid","hamburger","childImageSharp","className","_2035399617","Header","nav","navItem","Layout","components_header","titleShort","Date","getFullYear","_2559663860","node"],"mappings":"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","file":"component---src-pages-404-js-fac134ae8fc5736ccc7a.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout/layout.js'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\n/**\n * SEO\n * \n * provides the site with meta tags of the given information\n * \n * @param description\n * @param lang\n * @param meta\n * @param keywords\n * @param title\n * @returns meta elements\n */\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\n\n/**\n * NavItem\n * \n * Used for nav elements in header\n * \n * @param link where to link to\n * @param body text of item\n * @returns formatted nav item element\n */\nconst NavItem = ( { link, body } ) => (\n    <div class=\"nav-item\">\n        <h4 style={{ margin: 0 }}>\n            <Link to={link} style={{\n                color: `white`,\n                textDecoration: `none`,\n            }}>\n            { body }\n            </Link>\n        </h4>\n    </div>\n);\n\nNavItem.propTypes = {\n    link: PropTypes.string,\n    body: PropTypes.string\n}\n\nNavItem.defaultProps = {\n    link: ``,\n    body: ``\n}\n\nexport default NavItem","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'gatsby'\n\n/**\n * \n * NavLogo\n * \n * Takes given information and turns into the head of the navbar\n * \n * @param link link to\n * @param body label text\n * @returns a nav head element \n */\nconst NavLogo = ( { link, body } ) => (\n    <div class=\"nav-logo\">\n        <h3 style={{ margin: 0 }}>\n            <Link to={link} style={{\n                color: `white`,\n                textDecoration: `none`,\n            }}>\n            {body}\n            </Link>\n        </h3>\n    </div>\n);\n\nNavLogo.propTypes = {\n    link: PropTypes.string,\n    body: PropTypes.string\n}\n\nNavLogo.defaultProps = {\n    link: ``,\n    body: ``\n}\n\nexport default NavLogo","import React from 'react'\n\nclass NavHead extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n    }\n\n    render() {\n        return(\n            <div class=\"nav-head\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default NavHead","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport NavLogo from './navLogo'\nimport NavHead from './navHead'\n\nconst hamburgerQuery = graphql`\n    query {\n        hamburger: file(relativePath: { eq: \"hamburger.png\" }) {\n            childImageSharp {\n                fluid(maxWidth: 128, maxHeight: 128) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n    }`;\n\nclass Nav extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value : \"up\"\n        }\n    }\n\n    render() {\n        return(\n            <StaticQuery\n                query={hamburgerQuery}\n                render={(data) => (\n                    <div class=\"nav\">\n                        <NavHead>\n                            <NavLogo link='/' body={this.props.siteTitle} />\n                            <div \n                                class=\"nav-hamburger\" \n                                style={{\n                                    verticalAlign: \"center\"\n                                }} \n                                onClick={\n                                    () => {\n                                        (this.state.value === \"up\") ? \n                                            this.setState({value: \"down\"}) : \n                                            this.setState({value: \"up\"});\n                                    }\n                                }\n                            >\n                                <div style={{\n                                    height: \"32px\",\n                                    width: \"32px\"\n                                }}>\n                                    <Img fluid={data.hamburger.childImageSharp.fluid} />\n                                </div>\n                            </div>\n                        </NavHead>\n                        <div className={`nav-body slide-${this.state.value}`}>\n                            {this.props.children}\n                        </div>\n                    </div>\n                )}\n            />\n        )\n    }\n}\n\nexport default Nav","import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport NavItem from '../components/navbar/navItem'\nimport Nav from '../components/navbar/nav'\n\nimport '../css/header.css'\n\n/**\n * Header\n * \n * Creates the site banner\n * \n * @param siteTitle title for site, placed in large letters in banner\n */\nconst Header = ({ siteTitle }) => (\n    <Nav siteTitle={siteTitle}>\n        <NavItem link='/about' body='ABOUT' />\n        <NavItem link='/meetings' body='MEETINGS' />\n        <NavItem link='/contact' body='CONTACT' />\n    </Nav>\n);\n\n// declare property types\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n};\n\n// default values if value not given\nHeader.defaultProps = {\n    siteTitle: ``,\n};\n\nexport default Header;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from '../header'\nimport '../../css/layout.css'\nimport '../../css/custom.css'\n\n/**\n * Layout\n * \n * Provides a layout for the site, puts a header and footer around content given\n * \n * @param children inner content for site\n */\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query LayoutQuery {\n                site {\n                    siteMetadata {\n                        title,\n                        titleShort,\n                        author\n                    }\n                }\n            }\n        `}\n        render={(data) => (\n            <div class=\"site\">\n                <Header siteTitle={data.site.siteMetadata.titleShort} />\n                <div class=\"site-content\"> \n                    {children}\n                </div>\n                <footer>\n                    <div class=\"footer-content\">\n                        Copyright {new Date().getFullYear()} {data.site.siteMetadata.author}\n                    </div>\n                </footer>\n            </div>\n        )}\n    />\n);\n\n// declare property types\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}